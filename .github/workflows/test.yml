name: test

on:
  push:
    branches:
      - master
  pull_request:
  release:
    types: [created]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']
        include:
          - python-version: '3.8'
            tag: 'cp38-manylinux_x86_64'
          - python-version: '3.9'
            tag: 'cp39-manylinux_x86_64'
          - python-version: '3.10'
            tag: 'cp310-manylinux_x86_64'
          - python-version: '3.11'
            tag: 'cp311-manylinux_x86_64'
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Setup Python environment
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 twine
        pip install -r requirements.txt
        pip install cibuildwheel
    # - name: Lint with flake8 for syntax errors
    #   run: |
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Build manylinux Python wheels using cibuildwheel
      run: cibuildwheel --platform linux --output-dir dist
      env:
        CIBW_BEFORE_ALL: 'sed -i -e "s/deb.debian.org/archive.debian.org/" /etc/apt/sources.list; apt-get update; apt-get --yes install libjpeg62-turbo-dev libavcodec-dev libswscale-dev libffi-dev'
        CIBW_MANYLINUX_X86_64_IMAGE: 'manylinux_2_24'
        CIBW_BUILD: ${{ matrix.tag }}
    - name: Install wheel
      run: pip install vi3o --no-index -f dist/
    - name: Install test dependencies
      run: |
        sudo apt-get --yes install ffmpeg
        pip install pytest py
    - name: Test wheel
      run: |
        cp -r test ~
        cd ~/test
        HEADLESS=1 py.test
    - name: Publish wheels to PyPI
      if: github.event_name == 'release' && matrix.os == 'ubuntu-latest'
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload dist/*-manylinux*.whl